{"ast":null,"code":"var _jsxFileName = \"/Users/kayleemarquez/Desktop/recipeprojecttwo/Frontend/src/pages/YourRecipePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourRecipePage() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [inputs, setInputs] = useState([{\n    id: 1,\n    value: \"\"\n  }]); // Initial input section\n\n  const handleAddInput = () => {\n    const newInput = {\n      id: inputs.length + 1,\n      value: \"\"\n    };\n    setInputs([...inputs, newInput]); // Add the new input to the state\n  };\n  const handleInputChange = (id, newValue) => {\n    setInputs(inputs.map(input => input.id === id ? {\n      ...input,\n      value: newValue\n    } : input));\n  };\n  const handleDeleteInput = id => {\n    const updatedInputs = inputs.filter(input => input.id !== id);\n    // Reassign step numbers (IDs) based on the updated array index\n    const reassignedInputs = updatedInputs.map((input, index) => ({\n      ...input,\n      id: index + 1 // Ensure IDs are sequential\n    }));\n    setInputs(reassignedInputs);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8001/returnusername', {\n        method: 'GET',\n        credentials: 'include' // Include session cookies\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.username) {\n          const steps = inputs.map(input => input.value);\n          const recipe = {\n            title,\n            description,\n            username: data.username,\n            steps\n          };\n          const response = await fetch('http://localhost:8001/addrecipe', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(recipe) // Converts the recipe object into a JSON string\n          });\n          if (response.ok) {\n            alert(\"{} Recipe created successfully!\");\n\n            // Reset form state to clear the form\n            setTitle('');\n            setDescription('');\n            setInputs([{\n              id: 1,\n              value: \"\"\n            }]);\n          } else {\n            alert(\"Failed to create recipe.\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `input-${input.id}`,\n        children: [\"Step \", input.id, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `input-${input.id}`,\n        type: \"text\",\n        value: input.value,\n        onChange: e => handleInputChange(input.id, e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleDeleteInput(input.id) // Add a delete button\n        ,\n        children: \"Delete Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, input.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddInput,\n      children: \"Add Another Step\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(YourRecipePage, \"GPceMsbEkJ9g3BzJPFusT/jblaw=\");\n_c = YourRecipePage;\nexport default YourRecipePage;\nvar _c;\n$RefreshReg$(_c, \"YourRecipePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YourRecipePage","_s","title","setTitle","description","setDescription","inputs","setInputs","id","value","handleAddInput","newInput","length","handleInputChange","newValue","map","input","handleDeleteInput","updatedInputs","filter","reassignedInputs","index","handleSubmit","e","preventDefault","response","fetch","method","credentials","ok","data","json","username","steps","recipe","headers","body","JSON","stringify","alert","error","console","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/kayleemarquez/Desktop/recipeprojecttwo/Frontend/src/pages/YourRecipePage.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction YourRecipePage() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [inputs, setInputs] = useState([{ id: 1, value: \"\" }]); // Initial input section\n\n\n  const handleAddInput = () => {\n    const newInput = { id: inputs.length + 1, value: \"\" };\n    setInputs([...inputs, newInput]); // Add the new input to the state\n  };\n\n\n  const handleInputChange = (id, newValue) => {\n    setInputs(inputs.map(input => \n      input.id === id ? { ...input, value: newValue } : input\n    ));\n  };\n\n  const handleDeleteInput = (id) => {\n    const updatedInputs = inputs.filter(input => input.id !== id);\n    // Reassign step numbers (IDs) based on the updated array index\n    const reassignedInputs = updatedInputs.map((input, index) => ({\n      ...input,\n      id: index + 1, // Ensure IDs are sequential\n    }));\n    setInputs(reassignedInputs);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8001/returnusername', {\n        method: 'GET',\n        credentials: 'include', // Include session cookies\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.username) {\n          const steps = inputs.map(input => input.value);\n\n          const recipe = {\n            title,\n            description,\n            username: data.username,\n            steps\n          };\n\n          const response = await fetch('http://localhost:8001/addrecipe', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify(recipe) // Converts the recipe object into a JSON string\n          });\n\n          if (response.ok) {\n\n            alert(\"{} Recipe created successfully!\");\n\n\n            // Reset form state to clear the form\n            setTitle('');\n            setDescription('');\n             setInputs([{ id: 1, value: \"\" }]);\n\n\n          } else {\n            alert(\"Failed to create recipe.\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"title\">Title:</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n\n      <label htmlFor=\"description\">Description:</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n\n      {inputs.map(input => (\n        <div key={input.id}>\n          <label htmlFor={`input-${input.id}`}>\n            Step {input.id}:\n          </label>\n          <input\n            id={`input-${input.id}`}\n            type=\"text\"\n            value={input.value}\n            onChange={(e) => handleInputChange(input.id, e.target.value)}\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={() => handleDeleteInput(input.id)} // Add a delete button\n          >\n            Delete Step\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={handleAddInput}>\n        Add Another Step\n      </button>\n\n      <button type=\"submit\">Create New Recipe</button>\n    </form>\n  );\n}\n\nexport default YourRecipePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}