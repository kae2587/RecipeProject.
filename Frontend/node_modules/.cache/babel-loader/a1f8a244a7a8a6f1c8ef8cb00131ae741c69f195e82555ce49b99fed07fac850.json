{"ast":null,"code":"var _jsxFileName = \"/Users/kayleemarquez/Desktop/recipeprojecttwo/Frontend/src/pages/YourRecipePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction YourRecipePage() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [inputs, setInputs] = useState([{\n    id: 1,\n    value: \"\"\n  }]); // Initial input section\n\n  const handleAddInput = () => {\n    const newInput = {\n      id: inputs.length + 1,\n      value: \"\"\n    };\n    setInputs([...inputs, newInput]); // Add the new input to the state\n  };\n  const handleInputChange = (id, newValue) => {\n    setInputs(inputs.map(input => input.id === id ? {\n      ...input,\n      value: newValue\n    } : input));\n  };\n  const handleDeleteInput = id => {\n    const updatedInputs = inputs.filter(input => input.id !== id);\n    // Reassign step numbers (IDs) based on the updated array index\n    const reassignedInputs = updatedInputs.map((input, index) => ({\n      ...input,\n      id: index + 1 // Ensure IDs are sequential\n    }));\n    setInputs(reassignedInputs);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8001/returnusername', {\n        method: 'GET',\n        credentials: 'include' // Include session cookies\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.username) {\n          const steps = inputs.map(input => input.value);\n          const recipe = {\n            title,\n            description,\n            username: data.username,\n            steps\n          };\n          const response = await fetch('http://localhost:8001/addrecipe', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(recipe) // Converts the recipe object into a JSON string\n          });\n          if (response.ok) {\n            //  alert(({title}), \" Recipe created successfully!\");\n            alert(title + \" Recipe created successfully!\");\n\n            // Reset form state to clear the form\n            setTitle('');\n            setDescription('');\n            setInputs([{\n              id: 1,\n              value: \"\"\n            }]);\n          } else {\n            alert(\"Failed to create recipe.\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.fullpage,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.header,\n          children: \" Add a New Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `input-${input.id}`,\n            children: [\"Step \", input.id, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `input-${input.id}`,\n            type: \"text\",\n            value: input.value,\n            onChange: e => handleInputChange(input.id, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDeleteInput(input.id) // Add a delete button\n            ,\n            children: \"Delete Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, input.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddInput,\n          children: \"Add Another Step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create New Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(YourRecipePage, \"GPceMsbEkJ9g3BzJPFusT/jblaw=\");\n_c = YourRecipePage;\nconst styles = {\n  fullpage: {\n    width: \"100%\",\n    height: \"100vh\",\n    backgroundColor: \"#97AFCB\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  header: {\n    fontSize: \"3rem\",\n    fontFamily: \"'Georgia', serif\",\n    textAlign: \"center\",\n    color: \"#000000\",\n    marginBottom: \"2rem\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"#f4f4f4\",\n    border: \"3px solid #000\",\n    borderRadius: \"15px\",\n    padding: \"2rem\",\n    width: \"450px\"\n  }\n};\nexport default YourRecipePage;\nvar _c;\n$RefreshReg$(_c, \"YourRecipePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","YourRecipePage","_s","title","setTitle","description","setDescription","inputs","setInputs","id","value","handleAddInput","newInput","length","handleInputChange","newValue","map","input","handleDeleteInput","updatedInputs","filter","reassignedInputs","index","handleSubmit","e","preventDefault","response","fetch","method","credentials","ok","data","json","username","steps","recipe","headers","body","JSON","stringify","alert","error","console","children","style","styles","fullpage","onSubmit","form","header","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","target","required","onClick","_c","width","height","backgroundColor","display","justifyContent","alignItems","fontSize","fontFamily","textAlign","color","marginBottom","flexDirection","border","borderRadius","padding","$RefreshReg$"],"sources":["/Users/kayleemarquez/Desktop/recipeprojecttwo/Frontend/src/pages/YourRecipePage.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction YourRecipePage() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [inputs, setInputs] = useState([{ id: 1, value: \"\" }]); // Initial input section\n\n\n  const handleAddInput = () => {\n    const newInput = { id: inputs.length + 1, value: \"\" };\n    setInputs([...inputs, newInput]); // Add the new input to the state\n  };\n\n\n  const handleInputChange = (id, newValue) => {\n    setInputs(inputs.map(input => \n      input.id === id ? { ...input, value: newValue } : input\n    ));\n  };\n\n  const handleDeleteInput = (id) => {\n    const updatedInputs = inputs.filter(input => input.id !== id);\n    // Reassign step numbers (IDs) based on the updated array index\n    const reassignedInputs = updatedInputs.map((input, index) => ({\n      ...input,\n      id: index + 1, // Ensure IDs are sequential\n    }));\n    setInputs(reassignedInputs);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8001/returnusername', {\n        method: 'GET',\n        credentials: 'include', // Include session cookies\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.username) {\n          const steps = inputs.map(input => input.value);\n\n          const recipe = {\n            title,\n            description,\n            username: data.username,\n            steps\n          };\n\n          const response = await fetch('http://localhost:8001/addrecipe', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n            body: JSON.stringify(recipe) // Converts the recipe object into a JSON string\n          });\n\n          if (response.ok) {\n\n          //  alert(({title}), \" Recipe created successfully!\");\n            alert(title + \" Recipe created successfully!\");\n\n            // Reset form state to clear the form\n            setTitle('');\n            setDescription('');\n             setInputs([{ id: 1, value: \"\" }]);\n\n\n          } else {\n            alert(\"Failed to create recipe.\");\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <>\n<div style={styles.fullpage}>\n    <form onSubmit={handleSubmit} style={styles.form}>\n        <h1 style={styles.header}> Add a New Recipe</h1>\n      <label htmlFor=\"title\">Title:</label>\n      <input\n        type=\"text\"\n        id=\"title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n\n      <label htmlFor=\"description\">Description:</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n\n      {inputs.map(input => (\n        <div key={input.id}>\n          <label htmlFor={`input-${input.id}`}>\n            Step {input.id}:\n          </label>\n          <input\n            id={`input-${input.id}`}\n            type=\"text\"\n            value={input.value}\n            onChange={(e) => handleInputChange(input.id, e.target.value)}\n            required\n          />\n          <button\n            type=\"button\"\n            onClick={() => handleDeleteInput(input.id) } // Add a delete button\n          >\n            Delete Step\n          </button>\n        </div>\n      ))}\n      <button type=\"button\" onClick={handleAddInput}>\n        Add Another Step\n      </button>\n\n      <button type=\"submit\">Create New Recipe</button>\n    </form>\n    </div>\n    </>\n\n  );\n}\n\n\nconst styles = {\n    fullpage: {\n      width: \"100%\",\n      height: \"100vh\",\n      backgroundColor: \"#97AFCB\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n\n    header: {\n        fontSize: \"3rem\",\n        fontFamily: \"'Georgia', serif\",\n        textAlign: \"center\",\n        color: \"#000000\",\n        marginBottom: \"2rem\",\n      },\n    \n\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        backgroundColor: \"#f4f4f4\",\n        border: \"3px solid #000\",\n        borderRadius: \"15px\",\n        padding: \"2rem\",\n        width: \"450px\",\n      },\n\n\n\n\n};\n\nexport default YourRecipePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}